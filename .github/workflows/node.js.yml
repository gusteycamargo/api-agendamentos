# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js

on: [push, pull_request]

jobs:
  run:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn
      
    - name: print secrets
      run: |
          echo $DEV_ENV_FILE >> src/.env
          cat src/.env
      shell: bash
      env:
        DEV_ENV_FILE : ${{secrets.DB_DATABASE}}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
       name: DEV_ENV_FILE
       path: src/.env
       
       
      
    - name: DB_DATABASE to DotenvTEST
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_DATABASE'
        value: ${{ secrets.DB_DATABASE }}
        envPath: '.env.testing'
    
    - name: DB_HOST to DotenvTEST
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_HOST'
        value: ${{ secrets.DB_HOST }}
        envPath: '.env.testing'
        
    - name: DB_PASSWORD to DotenvTEST
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_PASSWORD'
        value: ${{ secrets.DB_PASSWORD }}
        envPath: '.env.testing'
        
    - name: DB_USER to DotenvTEST
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_USER'
        value: ${{ secrets.DB_USER }}
        envPath: '.env.testing'
    
    - name: APP_KEY to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'APP_KEY' # [Required]
        value: ${{secrets.APP_KEY}} # [Required]
        
    - name: DB_DATABASE to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_DATABASE'
        value: ${{ secrets.DB_DATABASE_PROD }}
        
    - name: DB_HOST to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_HOST'
        value: ${{ secrets.DB_HOST_PROD }}
        
    - name: DB_CONNECTION to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_CONNECTION'
        value: mysql  

    - name: DB_PASSWORD to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_PASSWORD'
        value: ${{ secrets.DB_PASSWORD_PROD }}
   
    - name: DB_USER to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'DB_USER'
        value: ${{ secrets.DB_USER_PROD }}
        
    - name: MAIL_HOST to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'MAIL_HOST'
        value: ${{ secrets.MAIL_HOST }}
        
    - name: MAIL_PASSWORD to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'MAIL_PASSWORD'
        value: ${{ secrets.MAIL_PASSWORD }}
        
    - name: MAIL_PORT to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'MAIL_PORT'
        value: ${{ secrets.MAIL_PORT }}
      
    - name: MAIL_USERNAME to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'MAIL_USERNAME'
        value: ${{ secrets.MAIL_USERNAME }}
        
    - name: SESSION_DRIVER to Dotenv
      uses: TickX/var-to-dotenv@v1.1.4
      with:
        key: 'SESSION_DRIVER'
        value: ${{ secrets.SESSION_DRIVER }}
   
    - name: Run tests
      run: yarn test
